{"version":3,"sources":["hangmanButton.js","hangmanWord.js","gamedone.js","hangmanHolder.js","index.js"],"names":["HangmanButton","handleUserGuess","props","userGuess","letter","index","setState","disables","state","disabled","className","align","onClick","this","React","Component","HangManWord","handlePlayerWon","letters","includes","playerWon","guess","word","i","map","currentCharacter","setTimeout","wrongAnswer","buttons","element","tempButton","temp","key","String","fromCharCode","push","split","GameDone","restartGame","window","location","reload","gameState","HangmanHolder","setPlayerWon","playerWrongGuess","lives","playerLost","Math","floor","random","hangWord","hangmanWord","won","lost","App","style","marginTop","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d35aa77b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./hangmanButton.css\";\r\n\r\nclass HangmanButton extends React.Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            disabled : false\r\n        }\r\n    }\r\n\r\n\r\n    handleUserGuess = () =>{\r\n        this.props.userGuess(this.props.letter,this.props.index);\r\n        this.setState({ disables :true})\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div className = \"hangmanButtonDiv\" align = \"center\" >\r\n                <button className = \"hangmanButton\" onClick = {this.handleUserGuess} disabled = {this.state.disabled} >\r\n                    {this.props.letter}\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HangmanButton;","import React from \"react\";\r\nimport \"./hangmanWord.css\";\r\nimport HangmanButton from \"./hangmanButton\";\r\n\r\nclass HangManWord extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        let tempButton = [];\r\n        for(let i = 0 ; i < 26 ; i++){\r\n            let temp =  (\r\n                <td>\r\n                    <HangmanButton\r\n                        key = {\"a _\" + i}\r\n                        letter = {String.fromCharCode(97+i)}\r\n                        userGuess = {this.userGuess}\r\n                        index = {i}\r\n                        />\r\n                </td>\r\n            ); \r\n            tempButton.push(temp);\r\n        }\r\n        this.state = {\r\n            letters : (this.props.word.split(\"\")).map((letter) => (\r\n                \"_ \"\r\n            )),\r\n            buttons : tempButton\r\n        };\r\n\r\n    }\r\n\r\n    handlePlayerWon = () =>{\r\n        if( !this.state.letters.includes(\"_ \"))\r\n            this.props.playerWon();\r\n    }\r\n\r\n    userGuess = (guess,index) =>{\r\n        let found = this.props.word.includes(guess);\r\n\r\n       if (found){\r\n           let i = 0;\r\n           this.setState({\r\n               letters :\r\n               this.state.letters.map( (letter) => {\r\n                   let currentCharacter = ( this.props.word[i] === guess) ? this.props.word[i]  : \r\n                                          (this.state.letters[i] === \"_ \") ? \"_ \": this.state.letters[i];\r\n                   i++;\r\n                   return currentCharacter;\r\n               })\r\n            })\r\n            setTimeout(this.handlePlayerWon, 300);\r\n    \r\n        }else{\r\n            this.props.wrongAnswer();\r\n        }\r\n        let i = -1;\r\n        this.setState({buttons: this.state.buttons.map( element =>{\r\n                i++;\r\n                if ( i === index)\r\n                    return null;\r\n                \r\n                return element;\r\n            \r\n            }) \r\n        })\r\n\r\n        \r\n        \r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1 className = \"hangmanWordH1\" >{this.state.letters} </h1>\r\n             \r\n                <table>\r\n                    <tr>\r\n                        {this.state.buttons}\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HangManWord;","import React,{Component} from \"react\";\r\nimport \"./GameDone.css\";\r\n\r\nclass GameDone extends React.Component{\r\n\r\n\r\n    restartGame = () =>{\r\n        window.location.reload(false);\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div align = \"center\">\r\n                <table>\r\n                    <th align = \"center\">\r\n                        <h1>{this.props.gameState}</h1>\r\n                    </th>\r\n                    <tbody>\r\n                        <button onClick = {this.restartGame}> Play Again! </button>\r\n                    </tbody>\r\n                    <tfoot>\r\n\r\n                    </tfoot>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GameDone;","import React from \"react\";\r\nimport HangManWord from \"./hangmanWord\";\r\nimport GameDone from \"./gamedone\";\r\nclass HangmanHolder extends React.Component{\r\n    \r\n    constructor(props){\r\n        super(props);\r\n   \r\n        this.state={\r\n            lives : 6,\r\n            playerWon : false,\r\n            playerLost : false,\r\n            index : Math.floor(Math.random() * 24)\r\n        }; \r\n    }\r\n\r\n    \r\n\r\n    setPlayerWon = () =>{\r\n        this.setState({playerWon : true});\r\n    }\r\n\r\n    playerWrongGuess = () =>{\r\n        if ( this.state.lives > 1)\r\n            this.setState( { lives : this.state.lives - 1});\r\n        else{\r\n            this.setState( {playerLost: true});\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        let words =  [\"pokemon\",\"squirtle\",\"rattata\",\"torchic\",\"mudkip\",\"treeko\",\"sudoowudoo\",\"ditto\",\r\n                      \"fire\",\"water\",\"psychic\",\"ghost\",\"grass\",\"bug\",\"dragon\",\"ice\",\"dark\",\r\n                      \"fairy\",\"normal\",\"fighting\",\"ground\",\"rock\",\"steel\",\"flying\"];\r\n        let hangWord = words[ this.state.index ];\r\n        let hangmanWord =  <HangManWord \r\n                            key = \"hangmanWord\" \r\n                            word = {hangWord} \r\n                            playerWon = {this.setPlayerWon} \r\n                            wrongAnswer = {this.playerWrongGuess}\r\n                            /> ;\r\n\r\n        let won = <GameDone\r\n                    gameState = \"You won!!!!\"\r\n                         />\r\n\r\n        let lost = <GameDone\r\n                    gameState = \"You Lost :(\" \r\n                         />\r\n        \r\n        return(\r\n            <div>\r\n                                                                     \r\n                { (!this.state.playerLost && !this.state.playerWon)  ? (hangmanWord) : (this.state.playerWon) ? (won) : (lost)}\r\n     \r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HangmanHolder;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport HangmanHolder from \"./hangmanHolder\";\r\n\r\nclass App extends React.Component{\r\n    render(){\r\n        const divMargin = {\r\n            marginTop : 50,\r\n        }\r\n        return(\r\n            <div align = \"center\" style = { divMargin }>\r\n                <HangmanHolder\r\n                key = \"hangmanHolder\"\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}